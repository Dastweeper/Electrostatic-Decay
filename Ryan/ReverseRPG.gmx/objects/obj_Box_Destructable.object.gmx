<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Box_Destructable</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Box</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0;
vsp = 0;
grav = 0.5;
grounded = 0;
met = false;
dir = 0;

health1 = 15;

take_damage = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Collision Sets for the Box


//Player Collision
if place_meeting(x + player.hsp, y, player)
{
    if(!met){
        met = true;
        dir = player.image_xscale;
    }
    if(dir == player.image_xscale){
        hsp = player.hsp;
    }
}
else{
    met = false;
    hsp = 0;
}

//Weapon Colision
if(!place_meeting(x, y, obj_sword)){
    take_damage = true;
}

//If enemy can be hit and is colliding with the sword
if (take_damage) &amp;&amp; (place_meeting(x, y, obj_sword)){
    //If the player is attacking
    if(obj_sword.attacking == true){
            //Take damage, stop being hit till next attack
            //and get pushed back
            health1 -= 5;
            take_damage = false;
            //x += 15 * obj_sword.dir;
    }
}
//If enemy is hit by the arrow
if(place_meeting(x+3, y, obj_arrow) || place_meeting(x-3, y, obj_arrow)){
    health1 -= 5;
}

//if health = 0, die
if(health1 == 0){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Gravity and Terrain COllision for the box
vsp += grav;

if place_meeting(x, y+vsp, par_platform)
{
    while(!place_meeting(x, y+1, par_platform)) y+=1;
    vsp = 0;
    grounded = 1
}
else
{
    grounded = 0;
}

if place_meeting(x+hsp, y, par_platform)
{
    while(!place_meeting(x+sign(hsp), y, par_platform)) x+=sign(hsp);
    hsp = 0;
}

x += hsp;
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
