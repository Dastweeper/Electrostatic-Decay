<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sword</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>solid = false;
visible = false;

//The coordinates of the sword relative to the player
xrel = 0;
yrel = -5;

//Var to check if the player is already attacking with the sword
attacking = false

//Attack Types
stab = false;
slash = false;
spin = false;

//How long the sword is attacking for
count = 0;

add = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(par_weapon.weapon == 1){
        //check the create event for variable names and descriptions
    
    //Checks which direction the player is facing
    dir = player.image_xscale;
    //Sets the sword to that direction
    image_xscale = dir;
    
    //If the attack key is pushed or not
    //(direct = hold to keep attacking. pressed = press the key every attack)
    key_stab = keyboard_check_direct(ord('A'));
    key_slash = keyboard_check_direct(ord('S'));
    
    //If A is pressed and not attacking
    if(key_stab &amp;&amp; !attacking &amp;&amp; !slash){
        //Make the sword visible and start attacking
        visible = true;
        attacking = true;
        stab = true;
    }
    //If S is pressed and not attacking
    if(key_slash &amp;&amp; !attacking &amp;&amp; !stab){
            //Make the sword visible and start attacking
            visible = true;
            attacking = true;
            slash = true;
        if(player.grounded){
            //Make the sword verticle
            image_angle = 90 * dir;
            //Move the sword forward a bit
            xrel = 15 * dir;
        }
        else{
            attacking = true;
            image_angle = 90;
            spin = true;
        }
    }
    
    //Stab Function
    if(stab &amp;&amp; attacking){
        //Time different aspects of the attack
        count ++;
        //For 5 counts, move the sword in the x dir
        if(count &lt;= 5){
            xrel += 4 * dir;
        }
        //For 5 counts, move the sword in the -x dir
        else if (count &gt; 5 &amp;&amp; count &lt;= 10){
            xrel -= 4 * dir;
        }
        //Finish the stab
        else if (count == 11){
            //Reset the vars/make the sword invisible
            count = 0;
            xrel = 0;
            visible = false;
            attacking = false;
            stab = false;    
       } 
    }
    
    //If slahing and attacking
    if(slash &amp;&amp; attacking){
        if(!spin){
            count ++;
            xrel = 15 * dir;
            //Rotate the slash clockwise
            if((dir == 1 &amp;&amp; image_angle &gt; -45) || (dir == -1 &amp;&amp; image_angle &lt; 45)){
                image_angle -= (15 * dir);
            }
            else{
            //Reset the vars and make the sword invisible
                count = 0;
                xrel = 0;
                visible = false;
                image_angle = 0;
                slash = false;
                attacking = false;
            }
        }
        //If using the spin move
        else{
            //Rotate the sword
            image_angle -= 30;
            //If on the ground
            if(player.grounded == 1){
                //Reset the sword angle and stop attacking
                visible = false;
                image_angle = 0;
                slash = false;
                spin = false;
                attacking = false;
            }
        }
    }
    
    //Positions the sword according to the players coordinates
    x = player.x + xrel;
    y = player.y + yrel;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>18,18</point>
  </PhysicsShapePoints>
</object>
