<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Box_Indestructable</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Box</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0;
vsp = 0;
grav = 0.5;
grounded = 0;
met = false;
dir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x + player.hsp, y, player)
{
    if(!met){
        met = true;
        dir = player.image_xscale;
    }
    if(dir == player.image_xscale){
        hsp = player.hsp;
    }
}
else{
    met = false;
    hsp = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*vsp += grav;

if place_meeting(x, y+vsp, par_platform)
{
    while(!place_meeting(x, y+1, par_platform)) y+=1;
    vsp = 0;
    grounded = 1
}
else
{
    grounded = 0;
}

if place_meeting(x+hsp, y, par_platform)
{
    while(!place_meeting(x+sign(hsp), y, par_platform)) x+=sign(hsp);
    hsp = 0;
}

x += hsp;
y += vsp;
*/
//gradually adds gravity to jumps
vsp += grav;

// stops horizontal movement at collision of boundary
if (collision_rectangle(x-16+hsp, y+16 ,x+16+hsp, y-16, par_boundary, true, false) != noone)
{
    while(collision_rectangle(x-16, y+16 ,x+16, y-16, par_boundary, true, false) == noone) x+=sign(hsp);
    hsp = 0;
}


//stops movement as player jumps upward towards a boundary
if (collision_line(x-16, y-16+vsp, x+19, y-16+vsp, par_boundary,true, false) != noone)
{
    while((collision_line(x-16, y-17, x+16, y-17, par_boundary,true, false)) == noone)
    {
        y+=sign(vsp);
    }
    vsp = 0;
}

if(sign(vsp)&gt;=0){
        if(collision_rectangle(x-16, y+16+vsp, x+16, y+16, par_platform, true, false) != noone){
            while(collision_line(x-16, y+16, x+16, y+16, par_platform, true, false) == noone){
                y+=sign(vsp);
                
            }
            vsp=0;
            grounded = 1;
        }
        else if(collision_rectangle(x-16, y+17+vsp, x+17, y+16, obj_Box, true, false) != noone){
            while(collision_line(x-17, y+16, x+17, y+16, obj_Box, true, false) == noone){
                y+=sign(vsp);
                
            }
            vsp=0;
            grounded = 1;
        }
        else{
            grounded = 0;
        }
}

if(sign(vsp)&gt;=0){
        if(collision_rectangle(x-16, y+16+vsp, x+16, y+16, par_boundary, true, false) != noone){
            while(collision_line(x-16, y+16, x+16, y+16, par_boundary, true, false) == noone){
                y+=sign(vsp);
                
            }
            vsp=0;
            grounded = 1;
        }
}

if (collision_line(x-16, y-16+vsp, x+16, y-16+vsp, par_boundary,true, false) != noone)
{
    while((collision_line(x-16, y-16, x+16, y-16, par_boundary,true, false)) == noone)
    {
        y+=sign(vsp);
    }
    vsp = 0;
}

//commits movement
x += hsp;
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
